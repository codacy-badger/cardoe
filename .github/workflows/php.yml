name: Cardoe
on: [push, pull_request]

jobs:
  run:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
    steps:
      - uses: actions/checkout@v1

      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '5.x'
      - run: redis-cli ping

      - name: Setup PHP
        uses: shivammathur/setup-php@1.5.2
        with:
          php-version: '7.3'
          extension-csv: apcu, mbstring, xdebug
          ini-values-csv: apc.enable_cli=1, apc.enabled=1
          coverage: xdebug
          pecl: true

      - name: Init Database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS `gonano`;'
      - name: Show PHP Version
        run: php -v

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Setup .env
        run: cp -v config/.env.example config/.env

      #      - name: Install PHPStan
      #        run: composer require --prefer-dist --no-progress --no-suggest --dev phpstan/phpstan
      #
      #      - name: Run Psalm
      #        run: vendor/bin/psalm --show-info=false
      #
      #      - name: Run PHPStan
      #        run: vendor/bin/phpstan analyse -l 5 src

      - name: Run Tests
        run: |
          vendor/bin/codecept build
          vendor/bin/codecept run --coverage --coverage-xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./tests/_output/coverage.xml
          name: codecov-umbrella


#    strategy:
#      fail-fast: false
#      max-parallel: 3
#      matrix:
#        php-versions: ['7.3']
#    steps:
#      - uses: actions/checkout@v1
#      - name: Setup PHP, with composer and extensions
#        uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
#        with:
#          php-version: ${{ matrix.php-versions }}
#          extension-csv: mbstring, xml
#          coverage: xdebug #optional
#      - name: Install Composer dependencies
#        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
#      - name: Run Tests
#        run: |
#          vendor/bin/codecept build
#          vendor/bin/codecept run --coverage --coverage-xml
#      - uses: codecov/codecov-action@v1.0.3
#        with:
#          token: ${{secrets.CODECOV_TOKEN}} #required
#          file: ./tests/_output/coverage.xml #optional
#          flags: unittests #optional