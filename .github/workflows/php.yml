name: Cardoe
on: [push, pull_request]

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        operating-system: [ubuntu-latest]
        # operating-system: [ubuntu-latest, windows-latest, macOS-latest]
        php-versions: ['7.3', '7.4']
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gonano
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Memcached Service
        uses: niden/actions-memcached@v1

      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: '5.x'
      - run: redis-cli ping

      - name: Setup PHP
        uses: shivammathur/setup-php@1.5.2
        with:
          php-version: '${{ matrix.php-versions }}'
          extension-csv: apcu, mbstring, xdebug
          ini-values-csv: apc.enable_cli=1, apc.enabled=1
          coverage: xdebug
          pecl: true

      - name: Init Database
        run: |
          mysql -uroot -h127.0.0.1 -proot -e 'CREATE DATABASE IF NOT EXISTS `gonano`;'

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v1 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, zip, mysql, sqlite, pgsql
          coverage: xdebug #optional

      - name: Show PHP Version
        run: php -v

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Run Unit Tests
        run: |
          wget https://scrutinizer-ci.com/ocular.phar
          vendor/bin/codecept build
          vendor/bin/codecept run unit --coverage --coverage-xml

      - name: Upload Unit Coverage to Scrutinizer
        run: |
          php ocular.phar code-coverage:upload --format=php-clover ./tests/_output/coverage.xml

      - name: Run Integration Tests - MySQL
        run: |
          vendor/bin/codecept run integration --env mysql --coverage --coverage-xml

      - name: Upload Integration MySQL Coverage to Scrutinizer
        run: |
          php ocular.phar code-coverage:upload --format=php-clover ./tests/_output/coverage.xml

      - name: Run Integration Tests - Sqlite
        run: |
          vendor/bin/codecept run integration --env sqlite --coverage --coverage-xml

      - name: Upload Integration Sqlite Coverage to Scrutinizer
        run: |
          php ocular.phar code-coverage:upload --format=php-clover ./tests/_output/coverage.xml
